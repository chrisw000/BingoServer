<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1" xml:space="preserve">
    <value>Weak signal</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>Fight in orogress</value>
  </data>
  <data name="11" xml:space="preserve">
    <value>Animal problem</value>
  </data>
  <data name="12" xml:space="preserve">
    <value>Stand by</value>
  </data>
  <data name="13" xml:space="preserve">
    <value>Report conditions</value>
  </data>
  <data name="14" xml:space="preserve">
    <value>Prowler report</value>
  </data>
  <data name="15" xml:space="preserve">
    <value>Civil disturbance</value>
  </data>
  <data name="16" xml:space="preserve">
    <value>Domestic problem</value>
  </data>
  <data name="17" xml:space="preserve">
    <value>Meet complainant</value>
  </data>
  <data name="18" xml:space="preserve">
    <value>Urgent</value>
  </data>
  <data name="19" xml:space="preserve">
    <value>Goto station</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>Good signal</value>
  </data>
  <data name="20" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="21" xml:space="preserve">
    <value>Phone Sgt McClusky</value>
  </data>
  <data name="22" xml:space="preserve">
    <value>Disregard</value>
  </data>
  <data name="23" xml:space="preserve">
    <value>Arrived at scene</value>
  </data>
  <data name="24" xml:space="preserve">
    <value>Assignment complete</value>
  </data>
  <data name="25" xml:space="preserve">
    <value>Report to Sgt McClusky</value>
  </data>
  <data name="26" xml:space="preserve">
    <value>Detaing suspect</value>
  </data>
  <data name="27" xml:space="preserve">
    <value>Drivers license information</value>
  </data>
  <data name="28" xml:space="preserve">
    <value>Vehicle registration information</value>
  </data>
  <data name="29" xml:space="preserve">
    <value>Check for warrents</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>Stop transmitting</value>
  </data>
  <data name="30" xml:space="preserve">
    <value>Unauthorized use of radio</value>
  </data>
  <data name="31" xml:space="preserve">
    <value>Crime in progress</value>
  </data>
  <data name="32" xml:space="preserve">
    <value>Person with gun</value>
  </data>
  <data name="33" xml:space="preserve">
    <value>Emergency, stand by</value>
  </data>
  <data name="34" xml:space="preserve">
    <value>I predict a riot</value>
  </data>
  <data name="35" xml:space="preserve">
    <value>Major crime alert</value>
  </data>
  <data name="36" xml:space="preserve">
    <value>Correct time</value>
  </data>
  <data name="37" xml:space="preserve">
    <value>Investigate suspicious vehicle</value>
  </data>
  <data name="38" xml:space="preserve">
    <value>Stop suspicious vehicle</value>
  </data>
  <data name="39" xml:space="preserve">
    <value>Use lights and siren</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>Message received</value>
  </data>
  <data name="40" xml:space="preserve">
    <value>Respond quickly</value>
  </data>
  <data name="41" xml:space="preserve">
    <value>Begining shift</value>
  </data>
  <data name="42" xml:space="preserve">
    <value>Ending shift</value>
  </data>
  <data name="43" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="44" xml:space="preserve">
    <value>Permission to leave</value>
  </data>
  <data name="45" xml:space="preserve">
    <value>Dead animal</value>
  </data>
  <data name="46" xml:space="preserve">
    <value>Assist motorist</value>
  </data>
  <data name="47" xml:space="preserve">
    <value>Emergency road repair</value>
  </data>
  <data name="48" xml:space="preserve">
    <value>Traffic control</value>
  </data>
  <data name="49" xml:space="preserve">
    <value>Traffic signal out</value>
  </data>
  <data name="5" xml:space="preserve">
    <value>Relay</value>
  </data>
  <data name="50" xml:space="preserve">
    <value>Traffic accident</value>
  </data>
  <data name="51" xml:space="preserve">
    <value>Request tow truck</value>
  </data>
  <data name="52" xml:space="preserve">
    <value>Request ambulance</value>
  </data>
  <data name="53" xml:space="preserve">
    <value>Roadway blocked</value>
  </data>
  <data name="54" xml:space="preserve">
    <value>Livestock on roadway</value>
  </data>
  <data name="55" xml:space="preserve">
    <value>Intoxicated driver</value>
  </data>
  <data name="56" xml:space="preserve">
    <value>Intoxicated pedestrian</value>
  </data>
  <data name="57" xml:space="preserve">
    <value>Hit and run accident</value>
  </data>
  <data name="58" xml:space="preserve">
    <value>Direct traffic</value>
  </data>
  <data name="59" xml:space="preserve">
    <value>Escort</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="60" xml:space="preserve">
    <value>Squad in vacinity</value>
  </data>
  <data name="61" xml:space="preserve">
    <value>Personnel in vicinity</value>
  </data>
  <data name="62" xml:space="preserve">
    <value>Reply to message</value>
  </data>
  <data name="63" xml:space="preserve">
    <value>Prepare copy</value>
  </data>
  <data name="64" xml:space="preserve">
    <value>Local message</value>
  </data>
  <data name="65" xml:space="preserve">
    <value>Network message</value>
  </data>
  <data name="66" xml:space="preserve">
    <value>Cancel message</value>
  </data>
  <data name="67" xml:space="preserve">
    <value>Clear for network message</value>
  </data>
  <data name="68" xml:space="preserve">
    <value>Dispatch information</value>
  </data>
  <data name="69" xml:space="preserve">
    <value>Message recieved</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>Out of service</value>
  </data>
  <data name="70" xml:space="preserve">
    <value>Fire alarm</value>
  </data>
  <data name="71" xml:space="preserve">
    <value>Advise of nature of fire</value>
  </data>
  <data name="72" xml:space="preserve">
    <value>Report progress of fire</value>
  </data>
  <data name="73" xml:space="preserve">
    <value>Smoke report</value>
  </data>
  <data name="74" xml:space="preserve">
    <value>Negative</value>
  </data>
  <data name="75" xml:space="preserve">
    <value>In contact with Sgt McClusky</value>
  </data>
  <data name="76" xml:space="preserve">
    <value>En route to Sgt McClusky</value>
  </data>
  <data name="77" xml:space="preserve">
    <value>E.T.A.</value>
  </data>
  <data name="78" xml:space="preserve">
    <value>Request assistance</value>
  </data>
  <data name="79" xml:space="preserve">
    <value>Notify coroner</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>In service</value>
  </data>
  <data name="80" xml:space="preserve">
    <value>Pursuit in progress</value>
  </data>
  <data name="81" xml:space="preserve">
    <value>Breathalyzer report</value>
  </data>
  <data name="82" xml:space="preserve">
    <value>Reserve lodgings</value>
  </data>
  <data name="83" xml:space="preserve">
    <value>School crossing detail</value>
  </data>
  <data name="84" xml:space="preserve">
    <value>E.T.A</value>
  </data>
  <data name="85" xml:space="preserve">
    <value>Arrival delayed</value>
  </data>
  <data name="86" xml:space="preserve">
    <value>Operator on duty</value>
  </data>
  <data name="87" xml:space="preserve">
    <value>Pick up</value>
  </data>
  <data name="88" xml:space="preserve">
    <value>Advise of telephone number</value>
  </data>
  <data name="89" xml:space="preserve">
    <value>Bomb threat</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="90" xml:space="preserve">
    <value>Bank alarm</value>
  </data>
  <data name="91" xml:space="preserve">
    <value>Pickup subject</value>
  </data>
  <data name="92" xml:space="preserve">
    <value>Illegally parked vehicle</value>
  </data>
  <data name="93" xml:space="preserve">
    <value>Blockage</value>
  </data>
  <data name="94" xml:space="preserve">
    <value>Drag racing</value>
  </data>
  <data name="95" xml:space="preserve">
    <value>Subject in custody</value>
  </data>
  <data name="96" xml:space="preserve">
    <value>Detain subject</value>
  </data>
  <data name="97" xml:space="preserve">
    <value>Test signal</value>
  </data>
  <data name="98" xml:space="preserve">
    <value>Escaped prisoner</value>
  </data>
  <data name="99" xml:space="preserve">
    <value>Wanted or stolen</value>
  </data>
</root>